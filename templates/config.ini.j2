# Limits the maximum time (in milliseconds) processing a single get_transactions call.
get-transactions-time-limit = 3

# the location of the block log (absolute path or relative to application data dir)
block-log-dir = "blocks"

# Pairs of [BLOCK_NUM,BLOCK_ID] that should be enforced as checkpoints.
# checkpoint =

# Maximum size MB of database shared memory file (eosio::chain_plugin)
shared-memory-size-mb = 1024

{% if http is defined %}
# The local IP and port to listen for incoming http connections.
http-server-address = {{http.server}}:{{http.port}}
{% endif %}

{% if https is defined %}
# The local IP and port to listen for incoming https connections; leave blank to disable. (eosio::http_plugin)
https-server-address = {{https.server}}:{{https.port}}

# Filename with the certificate chain to present on https connections. PEM format. Required for https. (eosio::http_plugin)
https-certificate-chain-file = {{https.cert_chain_file}}

# Filename with https private key in PEM format. Required for https (eosio::http_plugin)
https-private-key-file = {{https.priv_key_file}}

{% endif %}

# The Access-Control-Allow-Origin http value
# access-control-allow-origin = *

# The Access-Control-Allow-Headers http value
# access-control-allow-headers = Content-Type

# true if Access-Control-Allow-Credentials: true should be specified in http response header
access-control-allow-credentials = false

# The local IP address and port to listen for incoming connections.
p2p-listen-endpoint = {{p2p_host}}:{{p2p_port}}

# An externally accessible host:port for identifying this node. Defaults to p2p-listen-endpoint. (eosio::net_plugin)
p2p-server-address = {{p2p_host}}:{{p2p_port}}

# Log level: one of 'all', 'debug', 'info', 'warn', 'error', or 'off'
log-level-net-plugin = info

# The name supplied to identify this node amongst the peers.
agent-name = "{{agent_name}}"

# Can be 'any' or 'producers' or 'specified' or 'none'. If 'specified', peer-key must be specified at least once. If only 'producers', peer-key is not required. 'producers' and 'specified' may be combined. (eosio::net_plugin)
allowed-connection = any

# Optional public key of peer allowed to connect.  May be used multiple times. (eosio::net_plugin)
# peer-key =

# Tuple of [PublicKey, WIF private key] (may specify multiple times) (eosio::net_plugin)
# peer-private-key =

# Maximum number of clients from which connections are accepted, use 0 for no limit (eosio::net_plugin)
max-clients = 250

# number of seconds to wait before cleaning up dead connections (eosio::net_plugin)
connection-cleanup-period = 30

# Enable block production, even if the chain is stale.
enable-stale-production = false

# True to require exact match of peer network version.
network-version-match = 1

# number of blocks to retrieve in a chunk from any individual peer during synchronization (eosio::net_plugin)
sync-fetch-span = 100

# maximum sizes of transaction or block messages that are sent without first sending a notice (eosio::net_plugin)
max-implicit-request = 1500

# Percent of producers (0-99) that must be participating in order to produce blocks
required-participation = 33

# Lag in number of blocks from the head block when selecting the reference block for transactions (-1 means Last Irreversible Block) (eosio::txn_test_gen_plugin)
txn-reference-block-lag = 0
max-transaction-time = 10000
max-irreversible-block-age = -1
unlock-timeout = 900
chain-state-db-size-mb = 1024
reversible-blocks-db-size-mb = 340
contracts-console = false

# See https://github.com/HKEOS/Ghostbusters-Testnet/pull/26/files#diff-0
plugin = eosio::chain_api_plugin
plugin = eosio::chain_plugin

# History plugin needs to be enabled
plugin = eosio::history_api_plugin
plugin = eosio::history_plugin

{% if http is defined %}
plugin = eosio::http_plugin
plugin = eosio::history_api_plugin
{% endif %}

# how to pause the production of blocks via the producer (plugin) api
# curl http://127.0.0.1:16000/v1/producer/pause / Igor from RIO
# curl http://127.0.0.1:8888/v1/producer/pause
# curl http://127.0.0.1:9876/v1/producer/pause
# plugin = eosio::producer_api_plugin
pause-on-startup = false

# net_api_plugin removed due to security issues
# See https://steemit.com/eos/@eostribe/eos-bp-security-statement

#plugin = eosio::net_api_plugin
#plugin = eosio::wallet_api_plugin
#plugin = eosio::mongo_db_plugin

# The public endpoint of a peer node to connect to. Use multiple p2p-peer-address options as needed to compose a network. (eosio::net_plugin)
{% if (no_mesh | default(false)) == false  %}
{% for peer in trusted_peers %}
p2p-peer-address = {{peer}}
{% endfor %}
{% endif %}

signature-provider={{public_signing_key}}=KEY:{{private_signing_key}}

{%   if agent_name is defined %}
producer-name = {{agent_name}}
{%   endif %}

